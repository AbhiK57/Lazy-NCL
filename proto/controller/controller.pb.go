// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/controller.proto

package controller

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request to get the list of active NCL peers.
type GetPeerListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeerListRequest) Reset() {
	*x = GetPeerListRequest{}
	mi := &file_proto_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerListRequest) ProtoMessage() {}

func (x *GetPeerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerListRequest.ProtoReflect.Descriptor instead.
func (*GetPeerListRequest) Descriptor() ([]byte, []int) {
	return file_proto_controller_proto_rawDescGZIP(), []int{0}
}

// response containing the list of NCL peer addresses.
type GetPeerListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerAddresses []string               `protobuf:"bytes,1,rep,name=peer_addresses,json=peerAddresses,proto3" json:"peer_addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeerListResponse) Reset() {
	*x = GetPeerListResponse{}
	mi := &file_proto_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerListResponse) ProtoMessage() {}

func (x *GetPeerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerListResponse.ProtoReflect.Descriptor instead.
func (*GetPeerListResponse) Descriptor() ([]byte, []int) {
	return file_proto_controller_proto_rawDescGZIP(), []int{1}
}

func (x *GetPeerListResponse) GetPeerAddresses() []string {
	if x != nil {
		return x.PeerAddresses
	}
	return nil
}

var File_proto_controller_proto protoreflect.FileDescriptor

const file_proto_controller_proto_rawDesc = "" +
	"\n" +
	"\x16proto/controller.proto\x12\n" +
	"controller\"\x14\n" +
	"\x12GetPeerListRequest\"<\n" +
	"\x13GetPeerListResponse\x12%\n" +
	"\x0epeer_addresses\x18\x01 \x03(\tR\rpeerAddresses2\\\n" +
	"\n" +
	"Controller\x12N\n" +
	"\vGetPeerList\x12\x1e.controller.GetPeerListRequest\x1a\x1f.controller.GetPeerListResponseB.Z,github.com/AbhiK57/Lazy-NCL/proto/controllerb\x06proto3"

var (
	file_proto_controller_proto_rawDescOnce sync.Once
	file_proto_controller_proto_rawDescData []byte
)

func file_proto_controller_proto_rawDescGZIP() []byte {
	file_proto_controller_proto_rawDescOnce.Do(func() {
		file_proto_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_controller_proto_rawDesc), len(file_proto_controller_proto_rawDesc)))
	})
	return file_proto_controller_proto_rawDescData
}

var file_proto_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_controller_proto_goTypes = []any{
	(*GetPeerListRequest)(nil),  // 0: controller.GetPeerListRequest
	(*GetPeerListResponse)(nil), // 1: controller.GetPeerListResponse
}
var file_proto_controller_proto_depIdxs = []int32{
	0, // 0: controller.Controller.GetPeerList:input_type -> controller.GetPeerListRequest
	1, // 1: controller.Controller.GetPeerList:output_type -> controller.GetPeerListResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_controller_proto_init() }
func file_proto_controller_proto_init() {
	if File_proto_controller_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_controller_proto_rawDesc), len(file_proto_controller_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_controller_proto_goTypes,
		DependencyIndexes: file_proto_controller_proto_depIdxs,
		MessageInfos:      file_proto_controller_proto_msgTypes,
	}.Build()
	File_proto_controller_proto = out.File
	file_proto_controller_proto_goTypes = nil
	file_proto_controller_proto_depIdxs = nil
}
